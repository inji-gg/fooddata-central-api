// Generated by ts-to-zod
import { z } from "zod";
import {
  FoodNutrientUnit,
  DataType,
  SortBy,
  SortOrder,
  TradeChannel,
} from "./types";

const foodNutrientUnitSchema = z.nativeEnum(FoodNutrientUnit);
const dataTypeSchema = z.nativeEnum(DataType);
const sortBySchema = z.nativeEnum(SortBy);
const sortOrderSchema = z.nativeEnum(SortOrder);
const tradeChannelSchema = z.nativeEnum(TradeChannel);

const isDateFormat = (str: string): boolean => {
  const dateFormat = /^\d{4}-\d{2}-\d{2}$/;
  return dateFormat.test(str);
}
const dateSchema = z
  .string()
  .refine((s) => isDateFormat(s), "Format should be YYYY-MM-DD");

export const foodSearchCriteriaSchema = z.object({
  query: z.string(),
  dataType: z.array(dataTypeSchema).min(1).max(4).optional(),
  pageSize: z.number().gte(1).lte(200).optional(),
  pageNumber: z.number().optional(),
  sortBy: sortBySchema.optional(),
  sortOrder: sortOrderSchema.optional(),
  brandOwner: z.string().optional(),
  tradeChannel: z.array(tradeChannelSchema).min(1).max(3).optional(),
  startDate: dateSchema.optional(),
  endDate: dateSchema.optional(),
  requireAllWords: z.boolean().optional(),
});

const abridgedFoodNutrientSchema = z.object({
  nutrientId: z.number(),
  nutrientName: z.string().optional(),
  nutrientNumber: z.string(),
  unitName: foodNutrientUnitSchema,
  value: z.number().optional(),
  derivationCode: z.string().optional(),
  derivationDescription: z.string().optional(),
});

const searchResultFoodSchema = z.object({
  fdcId: z.number(),
  description: z.string(),
  dataType: dataTypeSchema.optional(),
  foodCode: z.number().optional(),
  foodNutrients: z.array(abridgedFoodNutrientSchema).optional(),
  publishedDate: z.string().optional(),
  scientificName: z.string().optional(),
  brandOwner: z.string().optional(),
  gtinUpc: z.string().optional(),
  ingredients: z.string().optional(),
  ndbNumber: z.number().optional(),
  additionalDescriptions: z.string().optional(),
  allHighlightFields: z.string().optional(),
  score: z.number().optional(),
  servingSize: z.number().optional(),
});

export const searchResultSchema = z.object({
  foodSearchCriteria: foodSearchCriteriaSchema,
  totalHits: z.number(),
  currentPage: z.number(),
  totalPages: z.number(),
  foods: z.array(searchResultFoodSchema),
});
